name: pytest

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        debian-version: [ '11', '12' ]
        sqlalchemy-version: [ '1.4' ]
        include:
          - debian-version: '11'
            python-version: '3.9'
            postgres-version: '13-bullseye'
          - debian-version: '12'
            python-version: '3.11'
            postgres-version: '15-bookworm'

    name: Debian ${{ matrix.debian-version }} - SQLAlchemy ${{ matrix.sqlalchemy-version }}

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Add database extensions
      run: |
        psql -h localhost -U postgres -d postgres -tc 'CREATE EXTENSION "uuid-ossp";'
      env:
        PGPASSWORD: postgres
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install \
          pytest-cov \
          -e .[tests] \
          -e file:dependencies/Utils-Flask-SQLAlchemy#egg=utils-flask-sqlalchemy
    - name: Install database
      run: |
        alembic upgrade utilisateurs@head
      env:
        SQLALCHEMY_URI: 'postgresql://postgres:postgres@localhost/postgres'
    - name: Test with pytest
      run: |
        pytest -v --cov --cov-report xml
      env:
        USERSHUB_AUTH_MODULE_SETTINGS: test_settings.py
    - name: Upload coverage to Codecov
      if: ${{ matrix.debian-version == '12' }}
      uses: codecov/codecov-action@v3
      with:
        flags: pytest
